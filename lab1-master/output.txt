
With all improvements

=======================================================
  Quick.java: quicksort (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000052 |      0,000051 |      0,000065
     30 |      0,000201 |      0,000396 |      0,000410
    100 |      0,000865 |      0,003134 |      0,003748
    300 |      0,003238 |      0,008282 |      0,028791
   1000 |      0,023992 |      0,026515 |      0,306794
   3000 |      0,172630 |      0,249428 |      2,662800
  10000 |      0,654973 |      0,754690 |     29,630300
  30000 |      2,185750 |      3,918525 |    468,626900
 100000 |      7,958400 |     10,667500 |   3049,149200

=======================================================
  Quick.java: quicksort with all improvements (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000351 |      0,000325 |      0,000328
     30 |      0,001141 |      0,001136 |      0,001147
    100 |      0,004787 |      0,004770 |      0,004755
    300 |      0,016578 |      0,017114 |      0,016846
   1000 |      0,063702 |      0,063621 |      0,063104
   3000 |      0,212178 |      0,212128 |      0,214466
  10000 |      0,786040 |      0,804985 |      0,787055
  30000 |      2,587450 |      2,577533 |      2,590050
 100000 |     10,591100 |      9,851400 |     10,252350'

--------------------------------------------------------------------------------------------------------------

Only shuffle first

=======================================================
  Quick.java: quicksort (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000055 |      0,000052 |      0,000068
     30 |      0,000201 |      0,000398 |      0,000410
    100 |      0,000937 |      0,002817 |      0,003538
    300 |      0,003547 |      0,008438 |      0,027970
   1000 |      0,025739 |      0,028349 |      0,293396
   3000 |      0,172492 |      0,268778 |      2,596183
  10000 |      0,648060 |      0,868150 |     28,025500
  30000 |      2,160375 |      4,083400 |    748,254100
 100000 |      8,048300 |     13,674000 |   3405,548600

=======================================================
  Quick.java: quicksort with all improvements (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000430 |      0,000411 |      0,000422
     30 |      0,001762 |      0,001642 |      0,001643
    100 |      0,006248 |      0,006315 |      0,006220
    300 |      0,020643 |      0,020602 |      0,020613
   1000 |      0,076230 |      0,078260 |      0,076122
   3000 |      0,246908 |      0,253472 |      0,246496
  10000 |      0,930325 |      0,911395 |      0,910985
  30000 |      2,937667 |      2,949533 |      2,967967
 100000 |     10,782000 |     10,887900 |     10,807800

--------------------------------------------------------------------------------------------------------------

Shuffle and insertion cutoff

  Quick.java: quicksort (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000054 |      0,000053 |      0,000089
     30 |      0,000217 |      0,000394 |      0,000397
    100 |      0,000942 |      0,002813 |      0,003580
    300 |      0,003371 |      0,008579 |      0,027873
   1000 |      0,028351 |      0,031896 |      0,294330
   3000 |      0,172671 |      0,268806 |      2,557617
  10000 |      0,661313 |      0,878140 |     28,245000
  30000 |      2,181875 |      4,152825 |    255,459600
 100000 |      8,125300 |     12,875400 |   3037,193000

=======================================================
  Quick.java: quicksort with all improvements (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000335 |      0,000327 |      0,000323
     30 |      0,001139 |      0,001137 |      0,001129
    100 |      0,004752 |      0,004784 |      0,004756
    300 |      0,016598 |      0,016634 |      0,016681
   1000 |      0,062871 |      0,062920 |      0,062257
   3000 |      0,206434 |      0,208976 |      0,206194
  10000 |      0,767635 |      0,767050 |      0,766140
  30000 |      2,607650 |      2,562267 |      2,539550
 100000 |      9,360400 |      9,472950 |      9,351500

--------------------------------------------------------------------------------------------------------------

Median of three and shuffle

  Quick.java: quicksort (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000054 |      0,000053 |      0,000068
     30 |      0,000210 |      0,000416 |      0,000440
    100 |      0,000877 |      0,002726 |      0,003620
    300 |      0,003289 |      0,007340 |      0,027745
   1000 |      0,023627 |      0,023924 |      0,293462
   3000 |      0,168595 |      0,229842 |      2,548450
  10000 |      0,641547 |      0,676495 |     28,051300
  30000 |      2,128125 |      3,083117 |    252,547700
 100000 |      7,779700 |      9,593950 |   2888,529000

=======================================================
  Quick.java: quicksort with all improvements (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000438 |      0,000425 |      0,000437
     30 |      0,001750 |      0,001773 |      0,001772
    100 |      0,006749 |      0,006729 |      0,006715
    300 |      0,022288 |      0,022513 |      0,022440
   1000 |      0,080981 |      0,082163 |      0,081380
   3000 |      0,263178 |      0,266108 |      0,265958
  10000 |      0,966780 |      0,966885 |      0,987485
  30000 |      3,470675 |      3,436750 |      3,117200
 100000 |     11,378900 |     12,577900 |     12,626000

 --------------------------------------------------------------------------------------------------------------

Only Median of three

=======================================================
  Quick.java: quicksort (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000056 |      0,000057 |      0,000078
     30 |      0,000249 |      0,000415 |      0,000441
    100 |      0,000911 |      0,002849 |      0,004032
    300 |      0,003482 |      0,007947 |      0,028903
   1000 |      0,022408 |      0,022655 |      0,301408
   3000 |      0,169270 |      0,231540 |      2,587150
  10000 |      0,663380 |      0,699620 |     30,699500
  30000 |      2,187238 |      3,078350 |    315,389600
 100000 |      7,917800 |     10,202250 |   3802,866200

=======================================================
  Quick.java: quicksort with all improvements (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000068 |      0,000065 |      0,000060
     30 |      0,000243 |      0,000255 |      0,000235
    100 |      0,000961 |      0,001118 |      0,000915
    300 |      0,003270 |      0,004621 |      0,003619
   1000 |      0,031544 |      0,013512 |      0,012388
   3000 |      0,168384 |      0,154290 |      0,049818
  10000 |      0,615493 |      0,430988 |      0,212410
  30000 |      2,039375 |      1,742920 |      0,673225
 100000 |      7,565150 |      6,656050 |      2,330013

--------------------------------------------------------------------------------------------------------------

Only insertion cutoff with different cutoff points.

=======================================================
  Quick.java: quicksort (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000067 |      0,000070 |      0,000125
     30 |      0,000274 |      0,000649 |      0,000495
    100 |      0,001162 |      0,003552 |      0,006846
    300 |      0,010476 |      0,010097 |      0,037393
   1000 |      0,051099 |      0,046816 |      0,403296
   3000 |      0,201812 |      0,373844 |      3,234433
  10000 |      0,986705 |      1,083260 |     35,831100
  30000 |      2,999400 |      5,006525 |    371,142900
 100000 |     10,009100 |     15,124400 |   5122,385800

=======================================================
  Quick.java: quicksort with all improvements cutoff 60 (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000048 |      0,000040 |      0,000026
     30 |      0,000329 |      0,000076 |      0,000070
    100 |      0,001168 |      0,002673 |      0,003022
    300 |      0,004640 |      0,005380 |      0,034082
   1000 |      0,020435 |      0,027977 |      0,402068
   3000 |      0,179199 |      0,290452 |      3,413150
  10000 |      0,734730 |      1,107530 |     44,983700
  30000 |      2,158550 |      4,385950 |    434,111400
 100000 |      8,788450 |     15,947000 |   5327,391100

=======================================================
  Quick.java: quicksort with all improvements cutoff 30 (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000060 |      0,000048 |      0,000029
     30 |      0,000222 |      0,000073 |      0,000083
    100 |      0,001227 |      0,003907 |      0,004797
    300 |      0,003838 |      0,008103 |      0,038532
   1000 |      0,020273 |      0,030781 |      0,396245
   3000 |      0,170073 |      0,295200 |      3,521175
  10000 |      0,725785 |      1,176880 |     48,767700
  30000 |      2,373000 |      5,738100 |    469,906800
 100000 |      9,359150 |     14,928000 |   5298,220100

=======================================================
  Quick.java: quicksort with all improvements cutoff 40 (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000038 |      0,000041 |      0,000036
     30 |      0,000219 |      0,000085 |      0,000078
    100 |      0,001130 |      0,003302 |      0,004013
    300 |      0,004655 |      0,008273 |      0,043553
   1000 |      0,022634 |      0,032979 |      0,451423
   3000 |      0,173175 |      0,378800 |      3,258675
  10000 |      0,658020 |      1,021070 |     39,299000
  30000 |      2,267917 |      5,178850 |    452,289200
 100000 |      8,844550 |     17,248400 |   5265,391400

=======================================================
  Quick.java: quicksort with all improvements cutoff 50 (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000040 |      0,000038 |      0,000033
     30 |      0,000241 |      0,000069 |      0,000073
    100 |      0,001220 |      0,003236 |      0,003357
    300 |      0,004058 |      0,006612 |      0,033280
   1000 |      0,018936 |      0,034298 |      0,447043
   3000 |      0,167949 |      0,320428 |      3,709125
  10000 |      0,644420 |      0,894780 |     42,215000
  30000 |      2,470563 |      4,663600 |    450,111300
 100000 |      8,819200 |     17,353600 |   5180,859400

 --------------------------------------------------------------------------------------------------------------

With insertion and merge (the fastest)

=======================================================
  Quick.java: quicksort (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000049 |      0,000051 |      0,000065
     30 |      0,000189 |      0,000400 |      0,000401
    100 |      0,000873 |      0,002803 |      0,003579
    300 |      0,003242 |      0,008534 |      0,027764
   1000 |      0,025567 |      0,026293 |      0,294724
   3000 |      0,169204 |      0,271694 |      2,638750
  10000 |      0,652540 |      0,830955 |     28,141800
  30000 |      2,162538 |      4,056500 |    252,777200
 100000 |      8,032050 |     12,848000 |   2863,731500

=======================================================
  Quick.java: quicksort with all improvements (times in ms)
=======================================================
   Size |        Random |    95% sorted |        Sorted
     10 |      0,000030 |      0,000026 |      0,000028
     30 |      0,000158 |      0,000045 |      0,000042
    100 |      0,000823 |      0,000387 |      0,000256
    300 |      0,003003 |      0,002580 |      0,001476
   1000 |      0,014169 |      0,009375 |      0,006897
   3000 |      0,129785 |      0,081715 |      0,021977
  10000 |      0,516657 |      0,250276 |      0,091834
  30000 |      1,728820 |      1,089730 |      0,294684
 100000 |      6,664000 |      4,136950 |      1,191640
